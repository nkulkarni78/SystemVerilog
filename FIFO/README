This repository contains synchronous FIFO design and complete test bench environment
developed in three stages. Design remains the same while the testbench approach kept
changing. First stage is with simple design and testbench with vcd files. Second one
is to add a selfchecking testbench and run dut. Third stage consists of class based
approach for complete system verilog test bench environment. The files are described
as below:


design.sv
Verilog Design file for Synchronous FIFO

## Type-1 consists of simple self checking testbench and top

selfchecking_tb.sv
selfchecking program block based testbench for DUT

top.sv
top file for DUT and program based testbench


## Type-2 SVTB environment with Transaction object and simple OOP concepts
Testbench transaction object generated from generator class is driven into DUT with
interface connections. The synchronization between stimuli applied and output gener-
ated from the DUT is manually obtained and is tedious task. Driver code is developed
in order to achieve this synchronization. To avoid maintanence involved, third appr-
oach based on clocking block and ref directions to avoid connection flow issues is
created.

## Type-3 Complete SVTB environment with Mod-ports and Clocking Blocks
